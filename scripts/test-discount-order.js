const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function createTestDiscountOrder() {
  try {
    console.log('üß™ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î...');

    // ‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏£‡∏Å
    const restaurant = await prisma.restaurant.findFirst({
      where: { status: 'ACTIVE' },
      include: { 
        categories: {
          include: {
            menuItems: true
          }
        }
      }
    });

    if (!restaurant || !restaurant.categories[0]?.menuItems[0]) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
      return;
    }

    const menuItem = restaurant.categories[0].menuItems[0];

    // ‡∏´‡∏≤ user ‡∏ó‡∏µ‡πà‡∏°‡∏µ lineUserId
    const user = await prisma.user.findFirst({
      where: { 
        role: { in: ['USER', 'CUSTOMER'] },
        NOT: { email: null }
      }
    });

    if (!user) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö user ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
      return;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
    const orderNumber = `ORD${Date.now()}DISCOUNT`;
    
    const testOrder = await prisma.order.create({
      data: {
        orderNumber,
        status: 'PENDING',
        customerName: user.name,
        customerPhone: '0987654321',
        customerEmail: user.email,
        lineUserId: 'test-line-user-123',
        deliveryAddress: '123 ‡∏ñ‡∏ô‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡πÅ‡∏Ç‡∏ß‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡πÄ‡∏Ç‡∏ï‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110',
        deliveryNotes: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î',
        subtotal: 250,
        deliveryFee: 30,
        tax: 0,
        discount: 50,        // ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 50 ‡∏ö‡∏≤‡∏ó
        promoCode: 'SAVE50', // ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
        total: 230,          // 250 + 30 - 50 = 230
        paymentMethod: 'cash',
        isPaid: false,
        restaurantId: restaurant.id,
        items: {
          create: [
            {
              quantity: 2,
              price: menuItem.price,
              notes: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î',
              menuItemId: menuItem.id
            },
            {
              quantity: 1,
              price: menuItem.price,
              notes: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
              menuItemId: menuItem.id
            }
          ]
        }
      },
      include: {
        restaurant: true,
        items: {
          include: {
            menuItem: true
          }
        }
      }
    });

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    console.log({
      orderNumber: testOrder.orderNumber,
      restaurant: testOrder.restaurant.name,
      subtotal: testOrder.subtotal,
      discount: testOrder.discount,
      promoCode: testOrder.promoCode,
      total: testOrder.total,
      itemsCount: testOrder.items.length
    });

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏≠‡∏µ‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
    const orderNumber2 = `ORD${Date.now()}NODISCOUNT`;
    
    const normalOrder = await prisma.order.create({
      data: {
        orderNumber: orderNumber2,
        status: 'CONFIRMED',
        customerName: user.name,
        customerPhone: '0987654321',
        customerEmail: user.email,
        lineUserId: 'test-line-user-123',
        deliveryAddress: '456 ‡∏ñ‡∏ô‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÅ‡∏Ç‡∏ß‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÄ‡∏Ç‡∏ï‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110',
        subtotal: 180,
        deliveryFee: 30,
        tax: 0,
        discount: 0,         // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î
        promoCode: null,     // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏Ñ‡πâ‡∏î
        total: 210,          // 180 + 30 = 210
        paymentMethod: 'transfer',
        isPaid: true,
        restaurantId: restaurant.id,
        items: {
          create: [
            {
              quantity: 1,
              price: menuItem.price,
              notes: '‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏Å‡∏ï‡∏¥‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î',
              menuItemId: menuItem.id
            }
          ]
        }
      },
      include: {
        restaurant: true,
        items: {
          include: {
            menuItem: true
          }
        }
      }
    });

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏Å‡∏ï‡∏¥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    console.log({
      orderNumber: normalOrder.orderNumber,
      restaurant: normalOrder.restaurant.name,
      subtotal: normalOrder.subtotal,
      discount: normalOrder.discount,
      promoCode: normalOrder.promoCode,
      total: normalOrder.total,
      itemsCount: normalOrder.items.length
    });

    console.log('\nüéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!');
    console.log('- ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î:', testOrder.orderNumber);
    console.log('- ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏Å‡∏ï‡∏¥:', normalOrder.orderNumber);
    console.log('\nüí° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÑ‡∏õ‡∏î‡∏π‡πÉ‡∏ô /orders ‡∏´‡∏£‡∏∑‡∏≠ /debug-orders-modal');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createTestDiscountOrder(); 